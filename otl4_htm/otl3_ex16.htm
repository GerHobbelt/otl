<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<HTML>
<HEAD>
   <TITLE>OTL 4.0, Example 16 (otl_stream::describe_select() with a simple Select)</TITLE>
   <META NAME="Author" CONTENT="Sergei Kuchin">
   <META NAME="GENERATOR" CONTENT="Mozilla/3.03Gold (Win95; I) [Netscape]">
   <META NAME="KeyWords" CONTENT="OTL, Oracle, ODBC, DB2, CLI, database API, C++, Template Library">
</HEAD>
<BODY>

<H1 ALIGN=CENTER>OTL 4.0, Example 16<BR>
(otl_stream::describe_select() with a simple Select)</H1>

<H1><A NAME="example1"></A>Example 16 (otl_stream::describe_select() with
a simple Select)</H1>

<P>This example demonstrates the <A HREF="otl3_stream_class.htm#describe_select">otl_stream::describe_select</A>()
with a simple SELECT statement.</P>

<H2>Source Code</H2>

<PRE>#include &lt;iostream&gt;
using namespace std;

#include &lt;stdio.h&gt;</PRE>

<PRE>#define OTL_ORA8 // Compile OTL 4.0/OCI8
#include &lt;otlv4.h&gt; // include the OTL 4.0 header file

<A HREF="otl3_connect_class.htm">otl_connect</A> db; // connect object

void select()
{ 
 <A HREF="otl3_stream_class.htm">otl_stream</A> i(1, // buffer size
              &quot;select * from test_tab where f1&gt;=:f&lt;int&gt; and f1&lt;=:f*2&quot;,
                 // SELECT statement
              db // connect object
             ); 
   // create select stream
 
 <A HREF="otl3_stream_class.htm#otl_column_desc">otl_column_desc</A>* desc;
 int desc_len;

 desc=i.<A HREF="otl3_stream_class.htm#describe_select">describe_select</A>(desc_len);

 for(int n=0;n&lt;desc_len;++n){
  cout&lt;&lt;&quot;========== COLUMN #&quot;&lt;&lt;n+1&lt;&lt;&quot; ===========&quot;&lt;&lt;endl;
  cout&lt;&lt;&quot;name=&quot;&lt;&lt;desc[n].name&lt;&lt;endl;
  cout&lt;&lt;&quot;dbtype=&quot;&lt;&lt;desc[n].dbtype&lt;&lt;endl;
  cout&lt;&lt;&quot;<A HREF="otl3_stream_class.htm#otl_var_dbtype">otl_var_dbtype</A>=&quot;&lt;&lt;desc[n].otl_var_dbtype&lt;&lt;endl;
  cout&lt;&lt;&quot;dbsize=&quot;&lt;&lt;desc[n].dbsize&lt;&lt;endl;
  cout&lt;&lt;&quot;scale=&quot;&lt;&lt;desc[n].scale&lt;&lt;endl;
  cout&lt;&lt;&quot;prec=&quot;&lt;&lt;desc[n].prec&lt;&lt;endl;
  cout&lt;&lt;&quot;nullok=&quot;&lt;&lt;desc[n].nullok&lt;&lt;endl;
 }
 

}

int main()
{
 <A HREF="otl3_connect_class.htm">otl_connect::otl_initialize</A>(); // initialize OCI environment
 try{

  db.rlogon(&quot;scott/tiger&quot;); // connect to Oracle

  <A HREF="otl3_const_sql.htm">otl_cursor::direct_exec
</A>   (
    db,
    &quot;drop table test_tab&quot;,
    otl_exception::disabled // disable OTL exceptions
   ); // drop table

  <A HREF="otl3_const_sql.htm">otl_cursor::direct_exec
</A>   (
    db,
    &quot;create table test_tab(f1 number, f2 varchar2(30), f3 long raw)&quot;
    );  // create table

  select(); // select records from table

 }

 catch(<A HREF="otl3_exception_class.htm">otl_exception</A>&amp; p){ // intercept OTL exceptions
  cerr&lt;&lt;p.msg&lt;&lt;endl; // print out error message
  cerr&lt;&lt;p.stm_text&lt;&lt;endl; // print out SQL that caused the error
  cerr&lt;&lt;p.var_info&lt;&lt;endl; // print out the variable that caused the error
 }

 db.logoff(); // disconnect from Oracle

 return 0;

}
</PRE>

<H2>Output</H2>

<PRE>========== COLUMN #1 ===========
name=F1
dbtype=2
otl_var_dbtype=2
dbsize=22
scale=0
prec=0
nullok=1
========== COLUMN #2 ===========
name=F2
dbtype=1
otl_var_dbtype=1
dbsize=30
scale=0
prec=0
nullok=1
========== COLUMN #3 ===========
name=F3
dbtype=24
otl_var_dbtype=10
dbsize=0
scale=0
prec=0
nullok=1






<HR WIDTH="100%"></PRE>

<CENTER><P><A HREF="otl3_examples.htm">Examples</A> <A HREF="otl3.htm">Contents</A>
<A HREF="home.htm">Go Home</A> </P></CENTER>

<P>Copyright &copy; 1996-2023, Sergei Kuchin, email: <A HREF="mailto:skuchin@gmail.com">skuchin@gmail.com</A>,
<A HREF="mailto:skuchin@gmail.com">skuchin@gmail.com</A>
<SCRIPT Language="JavaScript">
<!-- hide from old browsers
 var modDate = new Date(document.lastModified)
 document.write("<i> Last Updated:</i> " + (modDate.getMonth()+1) + "/" + 
                modDate.getDate() + "/" + "0"+(modDate.getYear())%100+".");
 //-->
 </SCRIPT>
.</P>

<P><I>Permission to use, copy, modify and redistribute this document for
any purpose is hereby granted without fee, provided that the above copyright
notice appear in all copies. THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE. </I></P>

<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript">
var pageTracker = _gat._getTracker("UA-5456201-1");
pageTracker._trackPageview();
</script>
</BODY>
</HTML>
