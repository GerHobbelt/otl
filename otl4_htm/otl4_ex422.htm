<!DOCTYPE html PUBLIC "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
  <meta http-equiv="Content-Type"
 content="text/html; charset=iso-8859-1">
  <meta name="Author" content="Sergei Kuchin">
  <meta name="GENERATOR"
 content="Mozilla/4.77 [en] (Win95; U) [Netscape]">
  <meta name="KeyWords"
 content="OTL, Oracle, ODBC, DB2, CLI, database API, C++, Template Library">
  <title>OTL 4.0, Example 422 (otl_datetime container with Datetime
values down to milliseconds in Sybase SQL Server)</title>
</head>
<body>
<center>
<h1>OTL 4.0, Example 422 (otl_datetime container with Datetime values
down
to milliseconds in MS SQL Server)</h1>
</center>
This example demonstrates simple INSERT/SELECT with Sybase SQL Server's
datetime's
and
<a href="otl3_stream_class.htm#otl_datetime">otl_datetime</a>.
<h2>Source Code</h2>
<pre>#include &lt;iostream&gt;<br>using namespace std;<br><br>#include &lt;stdio.h&gt;</pre>
<pre>#define OTL_ODBC_UNIX // Compile OTL 4.0/ODBC<br>#include &lt;otlv4.h&gt; // include the OTL 4.0 header file<br><br><a
 href="otl3_connect_class.htm">otl_connect</a> db; // connect object<br><br>void insert(void)<br>// insert rows into table<br>{&nbsp;<br>&nbsp;<a
 href="otl3_stream_class.htm">otl_stream</a> o(3, // stream buffer size in logical rows.<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "insert into test_tab "<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "values(:f1&lt;int&gt;,:f2&lt;<a
 href="otl3_bind_variables.htm#timestamp">timestamp</a>&gt;)",&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // INSERT statement<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; db // connect object<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; );<br><br>&nbsp;<a
 href="otl3_stream_class.htm#otl_datetime">otl_datetime</a> tm;<br><br>&nbsp;for(int i=1;i&lt;=10;++i){<br>&nbsp; tm.year=2008;<br>&nbsp; tm.month=10;<br>&nbsp; tm.day=19;<br>&nbsp; tm.hour=23;<br>&nbsp; tm.minute=12;<br>&nbsp; tm.second=12;<br>&nbsp; tm.frac_precision=3; // milliseconds<br>&nbsp; tm.fraction=123;<br>&nbsp; o&lt;&lt;i&lt;&lt;tm;<br>&nbsp;}<br>}<br><br>void select(void)<br>{&nbsp;<br>&nbsp;otl_stream i(5, // stream buffer size in logical rows<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "select * from test_tab",<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // SELECT statement<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; db // connect object<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; );&nbsp;<br>&nbsp;<br>&nbsp;int f1;<br>&nbsp;otl_datetime f2;<br><br>&nbsp;// Second's precision needs to be specified BEFORE the stucture can be<br>&nbsp;// used either for writnig or reading timestamp values, which have second's&nbsp;<br>&nbsp;// fractional part.<br>&nbsp;f2.frac_precision=3; // milliseconds<br><br>&nbsp;while(!i.eof()){ // while not end-of-data<br>&nbsp; i&gt;&gt;f1&gt;&gt;f2;<br>&nbsp; cout&lt;&lt;"f1="&lt;&lt;f1;<br>&nbsp; cout&lt;&lt;", f2="&lt;&lt;f2.month&lt;&lt;"/"&lt;&lt;f2.day&lt;&lt;"/"<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;&lt;f2.year&lt;&lt;" "&lt;&lt;f2.hour&lt;&lt;":"&lt;&lt;f2.minute&lt;&lt;":"<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;&lt;f2.second&lt;&lt;"."<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;&lt;f2.fraction;<br>&nbsp; cout&lt;&lt;endl;<br>&nbsp;}<br>&nbsp;<br>}</pre>
<pre>int main()<br>{<br>&nbsp;<a href="otl3_connect_class.htm">otl_connect::otl_initialize</a>(); // initialize ODBC environment<br>&nbsp;try{<br><br>&nbsp; db.rlogon("scott/tigger@sybsql"); // connect to Sybase SQL Server<br><br>&nbsp; <a
 href="otl3_const_sql.htm">otl_cursor::direct_exec<br></a>&nbsp;&nbsp; (<br>&nbsp;&nbsp;&nbsp; db,<br>&nbsp;&nbsp;&nbsp; "drop table test_tab",<br>&nbsp;&nbsp;&nbsp; otl_exception::disabled // disable OTL exceptions<br>&nbsp;&nbsp; ); // drop table<br><br>&nbsp; <a
 href="otl3_const_sql.htm">otl_cursor::direct_exec<br></a>&nbsp;&nbsp; (<br>&nbsp;&nbsp;&nbsp; db,<br>&nbsp;&nbsp;&nbsp; "create table test_tab(f1 int, f2 datetime)"<br>&nbsp;&nbsp;&nbsp; );&nbsp; // create table<br><br>&nbsp; insert(); // insert records into table<br>&nbsp; select(); // select records from table<br><br>&nbsp;}<br><br>&nbsp;catch(<a
 href="otl3_exception_class.htm">otl_exception</a>&amp; p){ // intercept OTL exceptions<br>&nbsp; cerr&lt;&lt;p.msg&lt;&lt;endl; // print out error message<br>&nbsp; cerr&lt;&lt;p.stm_text&lt;&lt;endl; // print out SQL that caused the error<br>&nbsp; cerr&lt;&lt;p.sqlstate&lt;&lt;endl; // print out SQLSTATE message<br>&nbsp; cerr&lt;&lt;p.var_info&lt;&lt;endl; // print out the variable that caused the error<br>&nbsp;}<br><br>&nbsp;db.logoff(); // disconnect from MS SQL Server<br><br>&nbsp;return 0;<br><br>}</pre>
<h2>
Output</h2>
<pre>f1=1, f2=10/19/2008 23:12:12.123<br>f1=2, f2=10/19/2006 23:12:12.123<br>f1=3, f2=10/19/2006 23:12:12.123<br>f1=4, f2=10/19/2006 23:12:12.123<br>f1=5, f2=10/19/2006 23:12:12.123<br>f1=6, f2=10/19/2006 23:12:12.123<br>f1=7, f2=10/19/2006 23:12:12.123<br>f1=8, f2=10/19/2006 23:12:12.123<br>f1=9, f2=10/19/2006 23:12:12.123<br>f1=10, f2=10/19/2006 23:12:12.123<br>f1=8, f2=10/19/2006 23:12:12.123<br>f1=9, f2=10/19/2006 23:12:12.123<br><br><br><hr
 width="100%"></pre>
<center><a href="otl3_examples.htm">Examples</a> <a href="otl3.htm">Contents</a><a
 href="home.htm">Go
Home</a></center>
<p>Copyright &copy; 1996-2023, Sergei Kuchin, email: <a
 href="mailto:skuchin@gmail.com">skuchin@gmail.com</a>,
<a href="mailto:skuchin@gmail.com">skuchin@gmail.com
<script language="JavaScript"><!-- hide from old browsers
 var modDate = new Date(document.lastModified)
 document.write("<i> Last Updated:</i> " + (modDate.getMonth()+1) + "/" + 
                modDate.getDate() + "/" + "0"+(modDate.getYear())%100+".");
 //-->
 </script></a>.
</p>
<p><i>Permission to use, copy, modify and redistribute this document
for
any purpose is hereby granted without fee, provided that the above
copyright
notice appear in all copies. THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.</i>
</p>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript">
var pageTracker = _gat._getTracker("UA-5456201-1");
pageTracker._trackPageview();
</script>
</body>
</html>
