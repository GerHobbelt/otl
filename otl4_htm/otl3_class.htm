<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2//EN">
<html>
  <head>

    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1">
    <title>OTL 4.0, OTL classes</title>
    <meta name="Author" content="Sergei Kuchin">
    <meta name="GENERATOR" content="Mozilla/3.03Gold (Win95; I)
      [Netscape]">
    <meta name="KeyWords" content="OTL, Oracle, ODBC, DB2, CLI, database
      API, C++, Template Library">
  </head>
  <body>
    <h1 align="center">OTL 4.0, OTL classes</h1>
    <h1><a name="otl_class"></a>OTL classes</h1>
    <p>OTL 4.0 was built as a state machine with a simple C++ stream
      like interface. OTL 4.0 has a template framework, which implements
      the <a href="otl3_str.htm">OTL
        stream concept</a>. The framework is comprised of template
      classes and
      inline functions. The template classes have ordinary classes as
      parameters.
      The parameters of the <i>class </i>type form a set of classes
      that
      provide
      the framework with an actual implementation of a database API.<br>
    </p>
    <p>Such an implementation is called the <i>OTL-adapter </i>for a
      given
      database API. In OTL 4.0, OTL-adapters for the following database
      APIs
      were implemented:</p>
    <ul>
      <li>Oracle Call Interface (OCI)</li>
      <li>MS SQL Server's SQL Native Client (SNAC)<br>
      </li>
      <li>DB2 Call Level Interface(CLI)</li>
      <li>Informix CLI<br>
      </li>
      <li>TimesTen CLI<br>
      </li>
      <li>SAP DB CLI</li>
      <li>Open Data Base Connectivity (ODBC) 3.x, and 2.5 for legacy
        apps.<br>
      </li>
    </ul>
    <p>The adapters are low level / thin wrappers around the database
      APIs.
      The adapter classes are substituted directly into the framework,
      so the
      OTL 4.0 works <i>almost</i> at the level of the database APIs
      because
      the
      OTL templates get expanded literally into the database API
      function
      calls.</p>
    <p>The template framework and an OTL-adapter substituted into the
      framework
      generate an instance of the following concrete OTL classes:</p>
    <ul>
      <li><a href="otl3_stream_class.htm">otl_stream</a></li>
      <li><a href="otl3_connect_class.htm">otl_connect</a></li>
      <li><a href="otl3_exception_class.htm">otl_exception</a></li>
      <li><a href="otl3_long_string.htm">otl_long_string</a></li>
    </ul>
    <p>
    </p>
    <hr width="100%">
    <p></p>
    <center>
      <p><a href="otl3_str.htm">Prev</a> <a
          href="otl3_stream_class.htm">Next</a>
        <a href="otl3.htm">Contents</a> <a href="home.htm">Go Home</a>
      </p>
    </center>
    <p>Copyright &copy; 1996-2022, Sergei Kuchin, email: <a
        href="mailto:skuchin@gmail.com">skuchin@gmail.com</a>,
      <a href="mailto:skuchin@gmail.com">skuchin@gmail.com</a>.
      <script language="JavaScript"><!-- hide from oldgmailsers
 var modDate = new Date(document.lastModified)
 document.write("<i>Last Updated:</i> " + (modDate.getMonth()+1) + "/" + 
                modDate.getDate() + "/" + "0"+(modDate.getYear())%100);
 //-->
 </script></p>
    <p><i>Permission to use, copy, modify and redistribute this document
        for
        any purpose is hereby granted without fee, provided that the
        above
        copyright
        notice appear in all copies. THE SOFTWARE IS PROVIDED "AS IS"
        AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS
        SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND
        FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL,
        DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
        WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER
        IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
        ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF
        THIS SOFTWARE. </i></p>
    <script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
    <script type="text/javascript">
var pageTracker = _gat._getTracker("UA-5456201-1");
pageTracker._trackPageview();
</script>
  </body>
</html>
