<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<html>
<head>
  <title>OTL 4.0, Example 287 (otl_stream::describe_select() with
extended otl_column_desc fields)</title>
  <meta name="Author" content="Sergei Kuchin">
  <meta name="GENERATOR"
 content="Mozilla/3.03Gold (Win95; I) [Netscape]">
  <meta name="KeyWords"
 content="OTL, Oracle, ODBC, DB2, CLI, database API, C++, Template Library">
</head>
<body>
<h1 align="center">OTL 4.0, Example 287<br>
(otl_stream::describe_select() with extended otl_column_desc fields)</h1>
<h1>Example 287 (otl_stream::describe_select() with
extended otl_column_desc fields)</h1>
<p>This example demonstrates the <a
 href="otl3_stream_class.htm#describe_select">otl_stream::describe_select</a>()
with extended fields in otl_column_desc.<br>
</p>
<h2>Source Code</h2>
<pre>#include &lt;iostream&gt;<br>using namespace std;<br><br>#include &lt;stdio.h&gt;</pre>
<pre>#define OTL_ORA9I // Compile OTL 4.0/OCI9i<br>//#define OTL_ORA10G // Compile OTL 4.0/OCI10g<br>#define OTL_UNICODE // Enable Unicode support<br>#include &lt;otlv4.h&gt; // include the OTL 4.0 header file<br><br><a
 href="otl3_connect_class.htm">otl_connect</a> db; // connect object<br><br>void select()<br>{ <br> <a
 href="otl3_stream_class.htm">otl_stream</a> i(1, // buffer size<br>              "select * from test_tab",<br>                 // SELECT statement<br>              db // connect object<br>             ); <br>   // create select stream<br> <br> <a
 href="otl3_stream_class.htm#otl_column_desc">otl_column_desc</a>* desc;<br> int desc_len;<br><br> desc=i.<a
 href="otl3_stream_class.htm#describe_select">describe_select</a>(desc_len);<br><br> for(int n=0;n&lt;desc_len;++n){<br>  cout&lt;&lt;"========== COLUMN #"&lt;&lt;n+1&lt;&lt;" ==========="&lt;&lt;endl;<br>  cout&lt;&lt;"name="&lt;&lt;desc[n].name&lt;&lt;endl;<br>  cout&lt;&lt;"dbtype="&lt;&lt;desc[n].dbtype&lt;&lt;endl;<br>  cout&lt;&lt;"<a
 href="otl3_stream_class.htm#otl_var_dbtype">otl_var_dbtype</a>="&lt;&lt;desc[n].otl_var_dbtype&lt;&lt;endl;<br>  cout&lt;&lt;"dbsize="&lt;&lt;desc[n].dbsize&lt;&lt;endl;<br>  cout&lt;&lt;"scale="&lt;&lt;desc[n].scale&lt;&lt;endl;<br>  cout&lt;&lt;"prec="&lt;&lt;desc[n].prec&lt;&lt;endl;<br>  cout&lt;&lt;"nullok="&lt;&lt;desc[n].nullok&lt;&lt;endl;<br>  cout&lt;&lt;"charset_form="&lt;&lt;desc[n].charset_form&lt;&lt;endl;<br>  cout&lt;&lt;"char_size="&lt;&lt;desc[n].char_size&lt;&lt;endl;<br> }<br> <br>}<br><br>int main()<br>{<br> <a
 href="otl3_connect_class.htm">otl_connect::otl_initialize</a>(); // initialize OCI environment<br> try{<br><br>  db.rlogon("scott/tiger"); // connect to Oracle<br><br>  <a
 href="otl3_const_sql.htm">otl_cursor::direct_exec<br></a>   (<br>    db,<br>    "drop table test_tab",<br>    otl_exception::disabled // disable OTL exceptions<br>   ); // drop table<br><br>  <a
 href="otl3_const_sql.htm">otl_cursor::direct_exec<br></a>   (<br>    db,<br>    "create table test_tab "<br>    "(f1 number, f2 varchar2(100), f3 nvarchar2(100), "<br>    "f4 char(100), f5 nchar(100), "<br>    "f6 clob, f7 nclob)"<br>    );  // create table<br><br>  select(); // select records from table<br><br> }<br><br> catch(<a
 href="otl3_exception_class.htm">otl_exception</a>&amp; p){ // intercept OTL exceptions<br>  cerr&lt;&lt;p.msg&lt;&lt;endl; // print out error message<br>  cerr&lt;&lt;p.stm_text&lt;&lt;endl; // print out SQL that caused the error<br>  cerr&lt;&lt;p.var_info&lt;&lt;endl; // print out the variable that caused the error<br> }<br><br> db.logoff(); // disconnect from Oracle<br><br> return 0;<br><br>}<br></pre>
<h2>Output<br>
</h2>
<pre>========== COLUMN #1 ===========<br>name=F1<br>dbtype=2<br>otl_var_dbtype=2<br>dbsize=22<br>scale=129<br>prec=0<br>nullok=1<br>charset_form=0<br>char_size=0<br>========== COLUMN #2 ===========<br>name=F2<br>dbtype=1<br>otl_var_dbtype=1<br>dbsize=100<br>scale=0<br>prec=0<br>nullok=1<br>charset_form=1<br>char_size=100<br>========== COLUMN #3 ===========<br>name=F3<br>dbtype=1<br>otl_var_dbtype=1<br>dbsize=200<br>scale=0<br>prec=0<br>nullok=1<br>charset_form=2<br>char_size=100<br>========== COLUMN #4 ===========<br>name=F4<br>dbtype=96<br>otl_var_dbtype=1<br>dbsize=100<br>scale=0<br>prec=0<br>nullok=1<br>charset_form=1<br>char_size=100<br>========== COLUMN #5 ===========<br>name=F5<br>dbtype=96<br>otl_var_dbtype=1<br>dbsize=200<br>scale=0<br>prec=0<br>nullok=1<br>charset_form=2<br>char_size=100<br>========== COLUMN #6 ===========<br>name=F6<br>dbtype=112<br>otl_var_dbtype=11<br>dbsize=4000<br>scale=0<br>prec=0<br>nullok=1<br>charset_form=1<br>char_size=0<br>========== COLUMN #7 ===========<br>name=F7<br>dbtype=112<br>otl_var_dbtype=11<br>dbsize=4000<br>scale=0<br>prec=0<br>nullok=1<br>charset_form=2<br>char_size=0<br><br><hr
 width="100%"></pre>
<center>
<p><a href="otl3_examples.htm">Examples</a> <a href="otl3.htm">Contents</a>
<a href="home.htm">Go Home</a> </p>
</center>
<p>Copyright &copy; 1996-2020, Sergei Kuchin, email: <a
 href="mailto:skuchin@gmail.com">skuchin@gmail.com</a>,
<a href="mailto:skuchin@gmail.com">skuchin@gmail.com</a>
<script language="JavaScript">
<!-- hide from old browsers
 var modDate = new Date(document.lastModified)
 document.write("<i> Last Updated:</i> " + (modDate.getMonth()+1) + "/" + 
                modDate.getDate() + "/" + "0"+(modDate.getYear())%100+".");
 //-->
 </script>.</p>
<p><i>Permission to use, copy, modify and redistribute this document
for
any purpose is hereby granted without fee, provided that the above
copyright
notice appear in all copies. THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE. </i></p>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript">
var pageTracker = _gat._getTracker("UA-5456201-1");
pageTracker._trackPageview();
</script>
</body>
</html>
