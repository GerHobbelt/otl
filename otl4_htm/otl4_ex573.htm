<!DOCTYPE doctype PUBLIC "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
  <meta http-equiv="Content-Type"
 content="text/html; charset=iso-8859-1">
  <meta name="Author" content="Sergei Kuchin">
  <meta name="GENERATOR"
 content="Mozilla/4.77 [en] (Win95; U) [Netscape]">
  <meta name="KeyWords"
 content="OTL, Oracle, ODBC, DB2, CLI, database API, C++, Template Library">
  <title>OTL 4.0, Example 573</title>
</head>
<body>
<center>
<h1> OTL 4.0, Example 573 (OTL/ODBC, accessing the system data
dictionary via ODBC functions, Sybase SQL Server)</h1>
</center>
This example demonstrates how to access the database system data
dictionary via ODBC functions, OTL/ODBC, Sybase SQL Server. In theory,
any
ODBC driver that implements the necessary ODBC functions can be used
with OTL/ODBC.
<h2> Source Code</h2>
<pre>#include &lt;iostream&gt;<br>#include &lt;stdio.h&gt;<br>using namespace std;<br><br>#define OTL_ODBC_UNIX // Compile OTL 4.0/ODBC<br>#include &lt;otlv4.h&gt; // include the OTL 4.0 header file<br><pre><br><a
 href="otl3_connect_class.htm">otl_connect</a> db; // connect object<br><br><br>void select()<br>{&nbsp;<br>&nbsp;<a
 href="otl3_stream_class.htm">otl_stream</a> s;<br><br>&nbsp;s.set_all_column_types(otl_all_num2str|otl_all_date2str);&nbsp;<br>&nbsp;&nbsp;&nbsp; // map all numeric and date/time output columns to strings for simplicity.<br><br> db.auto_commit_on(); // setting database connect auto-commit to ON<br><br>&nbsp;s.open(100, // buffer size<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "<tt>$SQLColumns $1:'sybsql' $2:'scott' $3:'test_tab'</tt>",<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //  get a list of all columns of table <br>         // "test_tab" that belongs to schema "dbo", <br>         // catalog "sybsql"<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; db // connect object<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; );&nbsp;<br><br>&nbsp;otl_column_desc* desc;<br>&nbsp;int desc_len;<br>&nbsp;desc=s.describe_select(desc_len);&nbsp;<br>&nbsp;&nbsp;&nbsp; // describe the structure of the output columns of the result set.<br><br>&nbsp;int rpc=0;<br>&nbsp;while(!s.eof()){<br>&nbsp;&nbsp; ++rpc;<br>&nbsp;&nbsp; char str[512];<br>&nbsp;&nbsp; cout&lt;&lt;"ROW#"&lt;&lt;rpc&lt;&lt;" ";<br>&nbsp;&nbsp; for(int col_num=0;col_num&lt;desc_len;++col_num){<br>&nbsp;&nbsp;&nbsp;&nbsp; s&gt;&gt;str;<br>&nbsp;&nbsp;&nbsp;&nbsp; if(s.is_null())<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cout&lt;&lt;desc[col_num].name&lt;&lt;"=NULL ";<br>&nbsp;&nbsp;&nbsp;&nbsp; else<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cout&lt;&lt;desc[col_num].name&lt;&lt;"="&lt;&lt;str&lt;&lt;" ";<br>&nbsp;&nbsp; }<br>&nbsp;&nbsp; cout&lt;&lt;endl;<br>&nbsp;}<br><br>}<br><br>int main()<br>{<br>&nbsp;<a
 href="otl3_connect_class.htm">otl_connect::otl_initialize</a>(); // initialize ODBC environment<br>&nbsp;try{<br><br>&nbsp; db.rlogon("scott/tigger@freetds_sybsql"); // connect to ODBC<br>// It's recommended to use auto_commit_off() when OTL is used<br>// with FreeTDS/ODBC against Sybase in order to set the DB<br>// session's auto-commit to OFF. otl_connect::rlogon()'s auto-commit <br>// parameter has not effect. auto_commit_off() is a workaround, until<br>// a fix becomes available.<br>  db.auto_commit_off();<br><br>&nbsp; select(); // query the system data dictionary via ODBC functions.<br><br>&nbsp;}<br><br>&nbsp;catch(<a
 href="otl3_exception_class.htm">otl_exception</a>&amp; p){ // intercept OTL exceptions<br>&nbsp; cerr&lt;&lt;p.msg&lt;&lt;endl; // print out error message<br>&nbsp; cerr&lt;&lt;p.stm_text&lt;&lt;endl; // print out SQL that caused the error<br>&nbsp; cerr&lt;&lt;p.sqlstate&lt;&lt;endl; // print out SQLSTATE message<br>&nbsp; cerr&lt;&lt;p.var_info&lt;&lt;endl; // print out the variable that caused the error<br>&nbsp;}<br><br>&nbsp;db.logoff(); // disconnect from ODBC<br><br>&nbsp;return 0;<br><br>}</pre>
<h2> Output<br></h2>
<pre>ROW#1 TABLE_CAT=sybsql TABLE_SCHEM=scott TABLE_NAME=test_tab COLUMN_NAME=f1 DATA_TYPE=4 TYPE_NAME=int COLUMN_SIZE=10 BUFFER_LENGTH=4 DECIMAL_DIGITS=0 NUM_PREC_RADIX=10 NULLABLE=1 REMARKS=NULL COLUMN_DEF=NULL SQL_DATA_TYPE=4 SQL_DATETIME_SUB=NULL CHAR_OCTET_LENGTH=0 ORDINAL_POSITION=1 IS_NULLABLE=YES <br>ROW#2 TABLE_CAT=sybsql TABLE_SCHEM=scott TABLE_NAME=test_tab COLUMN_NAME=f2 DATA_TYPE=-1 TYPE_NAME=text COLUMN_SIZE=2147483647 BUFFER_LENGTH=16 DECIMAL_DIGITS=NULL NUM_PREC_RADIX=NULL NULLABLE=1 REMARKS=NULL COLUMN_DEF=NULL SQL_DATA_TYPE=-1 SQL_DATETIME_SUB=NULL CHAR_OCTET_LENGTH=2147483647 ORDINAL_POSITION=2 IS_NULLABLE=YES <br><br><hr
 width="100%"></pre>
<center><a href="otl3_examples.htm">Examples</a> <a href="otl3.htm">Contents</a><a
 href="home.htm">Go Home</a></center>
<p>Copyright &copy; 1996-2023, Sergei Kuchin, email: <a
 href="mailto:skuchin@gmail.com">skuchin@gmail.com</a>, <a
 href="mailto:skuchin@gmail.com">skuchin@gmail.com<bgmailript
 language="JavaScript">
<!-- hide from old browsers
 var modDate = new Date(document.lastModified)
 document.write("<i> Last Updated:</i> " + (modDate.getMonth()+1) + "/" + 
                modDate.getDate() + "/" + "0"+(modDate.getYear())%100+".");
 //-->
  </bgmailript></a>.</p>
<p><i>Permission to use, copy, modify and redistribute this document<br>for any purpose is hereby granted without fee, provided that the above<br>copyright notice appear in all copies. THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.</i> </p>
</pre>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript">
var pageTracker = _gat._getTracker("UA-5456201-1");
pageTracker._trackPageview();
</script>
</body>
</html>
