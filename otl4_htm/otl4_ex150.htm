<!DOCTYPE html PUBLIC "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
  <meta http-equiv="Content-Type"
 content="text/html; charset=iso-8859-1">
  <meta name="Author" content="Sergei Kuchin">
  <meta name="GENERATOR"
 content="Mozilla/4.77 [en] (Win95; U) [Netscape]">
  <meta name="KeyWords"
 content="OTL, Oracle, ODBC, DB2, CLI, database API, C++, Template Library">
  <title>OTL 4.0, Example 150 (otl_refcur_stream, PL/SQL tables and
reference cursors as parameters in stored procedure)</title>
</head>
<body>
<center>
<h1>OTL 4.0, Example 150 (otl_refcur_stream, PL/SQL tables and
reference cursors
as parameters in stored procedure)</h1>
</center>
<h1>
Example 150 (otl_refcur_stream, PL/SQL tables and reference cursors as
parameters in stored procedure)</h1>
This example demonstrates a stored procedure, which has two input
parameters,
and on the output returns a PL/SQL table of strings and a couple of
reference
cursors.
<h2>Source Code</h2>
<pre>#include &lt;iostream&gt;<br>using namespace std;<br><br>#include &lt;stdio.h&gt;</pre>
<pre>#define OTL_ORA8 // Compile OTL 4.0/OCI8<br>//#define OTL_ORA8I // Compile OTL 4.0/OCI8i<br>//#define OTL_ORA9I // Compile OTL 4.0/OCI9i<br>#include &lt;otlv4.h&gt; // include the OTL 4.0 header file<br><br><a
 href="otl3_connect_class.htm">otl_connect</a> db; // connect object<br><br>void insert()<br>// insert rows into table<br>{&nbsp;<br>&nbsp;<a
 href="otl3_stream_class.htm">otl_stream</a> o(50, // buffer size<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "insert into test_tab values(:f1&lt;int&gt;,:f2&lt;char[31]&gt;)",&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // SQL statement<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; db // connect object<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; );<br>&nbsp;char tmp[32];<br><br>&nbsp;for(int i=1;i&lt;=100;++i){<br>&nbsp; sprintf(tmp,"Name%d",i);<br>&nbsp; o&lt;&lt;i&lt;&lt;tmp;<br>&nbsp;}<br>}<br><br>void select()<br>{&nbsp;<br>&nbsp;<a
 href="otl3_stream_class.htm">otl_stream</a> i(1, // buffer size<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "begin "<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; " my_pkg.my_proc(:f1&lt;int,in&gt;,:f2&lt;int,in&gt;, "<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :str1&lt;char[100],out[200]&gt;, "<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // :str1 is an output PL/SQL table of strings parameter<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :cur1&lt;refcur,out[50]&gt;, "<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :cur2&lt;refcur,out[50]&gt;); "<br>&nbsp;&nbsp;&nbsp;&nbsp; // :cur1, :cur2 are a bind variable names, refcur -- their types,&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp; // out -- output parameter, 50 -- the buffer size when this<br>&nbsp;&nbsp;&nbsp;&nbsp; // reference cursor will be attached to <a
 href="otl4_refcur_stream.htm">otl_refcur_stream<br></a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "end;", // PL/SQL block that calls a stored procedure<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; db // connect object<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; );&nbsp;<br><br>&nbsp; i.set_commit(0); // set stream "auto-commit" to OFF.</pre>
<pre>&nbsp;<a href="otl3_pl_tab.htm">otl_cstr_tab</a>&lt;200,101&gt; str1; // PL/SQL table of char[200][101]<br>&nbsp;float f1;<br>&nbsp;char f2[31];<br>&nbsp;<a
 href="otl4_refcur_stream.htm">otl_refcur_stream</a> s1, s2; // reference cursor streams for reading rows.<br><br>&nbsp;i&lt;&lt;8&lt;&lt;4; // assigning :f1 = 8, :f2 = 4<br>&nbsp;i&gt;&gt;str1; // reading :str1 from the stream<br>&nbsp;i<a
 href="otl3_stream_class.htm#stream_read_refcur">&gt;&gt;</a>s1; // initializing the refeence cursor stream with the output&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // reference cursor :cur1<br>&nbsp;i<a
 href="otl3_stream_class.htm#stream_read_refcur">&gt;&gt;</a>s2; // initializing the refeence cursor stream with the output&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // reference cursor :cur2<br><br>&nbsp;cout&lt;&lt;"STR1_Len="&lt;&lt;str1.len()&lt;&lt;endl;<br>&nbsp;for(int j=0;j&lt;str1.len();++j)<br>&nbsp; if(str1.is_null(j))<br>&nbsp;&nbsp; cout&lt;&lt;"STR1["&lt;&lt;j&lt;&lt;"]=NULL"&lt;&lt;endl;<br>&nbsp; else<br>&nbsp;&nbsp; cout&lt;&lt;"STR1["&lt;&lt;j&lt;&lt;"]="&lt;&lt;str1.v[j]&lt;&lt;endl;<br><br>&nbsp;cout&lt;&lt;"=====&gt; Reading :cur1..."&lt;&lt;endl;<br>&nbsp;while(!s1.eof()){ // while not end-of-data<br>&nbsp; s1&gt;&gt;f1&gt;&gt;f2;<br>&nbsp; cout&lt;&lt;"f1="&lt;&lt;f1&lt;&lt;", f2="&lt;&lt;f2&lt;&lt;endl;<br>&nbsp;}<br><br>&nbsp;cout&lt;&lt;"=====&gt; Reading :cur2..."&lt;&lt;endl;<br>&nbsp;while(!s2.eof()){ // while not end-of-data<br>&nbsp; s2&gt;&gt;f1&gt;&gt;f2;<br>&nbsp; cout&lt;&lt;"f1="&lt;&lt;f1&lt;&lt;", f2="&lt;&lt;f2&lt;&lt;endl;<br>&nbsp;}<br><br>&nbsp;s1.close(); // closing the reference cursor<br>&nbsp;s2.close(); // closing the reference cursor<br><br>}<br><br>int main()<br>{<br>&nbsp;<a
 href="otl3_connect_class.htm">otl_connect::otl_initialize</a>(); // initialize OCI environment<br>&nbsp;try{<br><br>&nbsp; db.rlogon("scott/tiger"); // connect to Oracle<br><br>&nbsp; <a
 href="otl3_const_sql.htm">otl_cursor::direct_exec<br></a>&nbsp;&nbsp; (<br>&nbsp;&nbsp;&nbsp; db,<br>&nbsp;&nbsp;&nbsp; "drop table test_tab",<br>&nbsp;&nbsp;&nbsp; otl_exception::disabled // disable OTL exceptions<br>&nbsp;&nbsp; ); // drop table<br><br>&nbsp; <a
 href="otl3_const_sql.htm">otl_cursor::direct_exec<br></a>&nbsp;&nbsp; (<br>&nbsp;&nbsp;&nbsp; db,<br>&nbsp;&nbsp;&nbsp; "create table test_tab(f1 number, f2 varchar2(30))"<br>&nbsp;&nbsp;&nbsp; );&nbsp; // create table<br><br>&nbsp; // create a PL/SQL package<br>&nbsp; <a
 href="otl3_const_sql.htm">otl_cursor::direct_exec<br></a>&nbsp;&nbsp; (db,<br>&nbsp;&nbsp;&nbsp; "CREATE OR REPLACE PACKAGE my_pkg IS "<br>&nbsp;&nbsp;&nbsp; " "<br>&nbsp;&nbsp;&nbsp; "&nbsp; TYPE my_cursor IS REF CURSOR; "<br>&nbsp;&nbsp;&nbsp; "&nbsp; TYPE my_tab IS TABLE OF VARCHAR2(100) "<br>&nbsp;&nbsp;&nbsp; "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; INDEX BY BINARY_INTEGER; "<br>&nbsp;&nbsp;&nbsp; " "<br>&nbsp;&nbsp;&nbsp; "&nbsp; PROCEDURE my_proc "<br>&nbsp;&nbsp;&nbsp; "&nbsp;&nbsp;&nbsp; (f1_in IN NUMBER, "<br>&nbsp;&nbsp;&nbsp; "&nbsp;&nbsp;&nbsp;&nbsp; f2_in IN NUMBER, "<br>&nbsp;&nbsp;&nbsp; "&nbsp;&nbsp;&nbsp;&nbsp; str1 OUT my_tab, "<br>&nbsp;&nbsp;&nbsp; "&nbsp;&nbsp;&nbsp;&nbsp; cur1 OUT my_cursor, "<br>&nbsp;&nbsp;&nbsp; "&nbsp;&nbsp;&nbsp;&nbsp; cur2 OUT my_cursor); "<br>&nbsp;&nbsp;&nbsp; " "<br>&nbsp;&nbsp;&nbsp; "END; "<br>&nbsp;&nbsp; );<br><br>&nbsp; <a
 href="otl3_const_sql.htm">otl_cursor::direct_exec<br></a>&nbsp;&nbsp; (db,<br>&nbsp;&nbsp;&nbsp; "CREATE OR REPLACE PACKAGE BODY my_pkg IS "<br>&nbsp;&nbsp;&nbsp; " "<br>&nbsp;&nbsp;&nbsp; "&nbsp; PROCEDURE my_proc "<br>&nbsp;&nbsp;&nbsp; "&nbsp;&nbsp;&nbsp; (f1_in IN NUMBER, "<br>&nbsp;&nbsp;&nbsp; "&nbsp;&nbsp;&nbsp;&nbsp; f2_in IN NUMBER, "<br>&nbsp;&nbsp;&nbsp; "&nbsp;&nbsp;&nbsp;&nbsp; str1 OUT my_tab, "<br>&nbsp;&nbsp;&nbsp; "&nbsp;&nbsp;&nbsp;&nbsp; cur1 OUT my_cursor, "<br>&nbsp;&nbsp;&nbsp; "&nbsp;&nbsp;&nbsp;&nbsp; cur2 OUT my_cursor) "<br>&nbsp;&nbsp;&nbsp; "&nbsp; IS "<br>&nbsp;&nbsp;&nbsp; "&nbsp;&nbsp;&nbsp; lv_cur1 my_cursor; "<br>&nbsp;&nbsp;&nbsp; "&nbsp;&nbsp;&nbsp; lv_cur2 my_cursor; "<br>&nbsp;&nbsp;&nbsp; "&nbsp; BEGIN "<br>&nbsp;&nbsp;&nbsp; "&nbsp;&nbsp;&nbsp; FOR i IN 1..4 LOOP "<br>&nbsp;&nbsp;&nbsp; "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; str1(i) := 'Line'||i; "<br>&nbsp;&nbsp;&nbsp; "&nbsp;&nbsp;&nbsp; END LOOP; "<br>&nbsp;&nbsp;&nbsp; "&nbsp;&nbsp;&nbsp; str1(5) := NULL; "<br>&nbsp;&nbsp;&nbsp; "&nbsp;&nbsp;&nbsp; OPEN lv_cur1 FOR "<br>&nbsp;&nbsp;&nbsp; "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SELECT * FROM test_tab "<br>&nbsp;&nbsp;&nbsp; "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WHERE f1&gt;=f1_in&nbsp; "<br>&nbsp;&nbsp;&nbsp; "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AND f1&lt;=f1_in*2; "<br>&nbsp;&nbsp;&nbsp; "&nbsp;&nbsp;&nbsp; OPEN lv_cur2 FOR "<br>&nbsp;&nbsp;&nbsp; "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SELECT * FROM test_tab "<br>&nbsp;&nbsp;&nbsp; "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WHERE f1&gt;=f2_in&nbsp; "<br>&nbsp;&nbsp;&nbsp; "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AND f1&lt;=f2_in*2; "<br>&nbsp;&nbsp;&nbsp; "&nbsp;&nbsp;&nbsp; cur1 := lv_cur1; "<br>&nbsp;&nbsp;&nbsp; "&nbsp;&nbsp;&nbsp; cur2 := lv_cur2; "<br>&nbsp;&nbsp;&nbsp; "&nbsp; END; "<br>&nbsp;&nbsp;&nbsp; "&nbsp;&nbsp; "<br>&nbsp;&nbsp;&nbsp; "END; "<br>&nbsp;&nbsp; );<br><br>&nbsp; insert(); // insert records into table<br>&nbsp; select(); // select records from table<br><br>&nbsp;}<br><br>&nbsp;catch(<a
 href="otl3_exception_class.htm">otl_exception</a>&amp; p){ // intercept OTL exceptions<br>&nbsp; cerr&lt;&lt;p.msg&lt;&lt;endl; // print out error message<br>&nbsp; cerr&lt;&lt;p.stm_text&lt;&lt;endl; // print out SQL that caused the error<br>&nbsp; cerr&lt;&lt;p.var_info&lt;&lt;endl; // print out the variable that caused the error<br>&nbsp;}<br><br>&nbsp;db.logoff(); // disconnect from Oracle<br><br>&nbsp;return 0;<br><br>}</pre>
<h2>
Output</h2>
<pre>STR1_Len=5<br>STR1[0]=Line1<br>STR1[1]=Line2<br>STR1[2]=Line3<br>STR1[3]=Line4<br>STR1[4]=NULL<br>=====&gt; Reading :cur1...<br>f1=8, f2=Name8<br>f1=9, f2=Name9<br>f1=10, f2=Name10<br>f1=11, f2=Name11<br>f1=12, f2=Name12<br>f1=13, f2=Name13<br>f1=14, f2=Name14<br>f1=15, f2=Name15<br>f1=16, f2=Name16<br>=====&gt; Reading :cur2...<br>f1=4, f2=Name4<br>f1=5, f2=Name5<br>f1=6, f2=Name6<br>f1=7, f2=Name7<br>f1=8, f2=Name8<br><br><br><hr
 width="100%"></pre>
<center><a href="otl3_examples.htm">Examples</a> <a href="otl3.htm">Contents</a><a
 href="home.htm">Go
Home</a></center>
<p>Copyright &copy; 1996-2022, Sergei Kuchin, email: <a
 href="mailto:skuchin@gmail.com">skuchin@gmail.com</a>,
<a href="mailto:skuchin@gmail.com">skuchin@gmail.com
<script language="JavaScript">
<!-- hide from old browsers
 var modDate = new Date(document.lastModified)
 document.write("<i> Last Updated:</i> " + (modDate.getMonth()+1) + "/" + 
                modDate.getDate() + "/" + "0"+(modDate.getYear())%100+".");
 //-->
 </script></a>.
</p>
<p><i>Permission to use, copy, modify and redistribute this document
for
any purpose is hereby granted without fee, provided that the above
copyright
notice appear in all copies. THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.</i>
</p>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript">
var pageTracker = _gat._getTracker("UA-5456201-1");
pageTracker._trackPageview();
</script>
</body>
</html>
