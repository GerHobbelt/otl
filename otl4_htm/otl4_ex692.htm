<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<html>
<head>
  <title>OTL 4.0, Example 692 (Customizing the date format via #define
OTL_TRACE_DATE_FORMAT)</title>
  <meta name="Author" content="Sergei Kuchin">
  <meta name="GENERATOR"
 content="Mozilla/3.03Gold (Win95; I) [Netscape]">
  <meta name="KeyWords"
 content="OTL, Oracle, ODBC, DB2, CLI, database API, C++, Template Library">
</head>
<body>
<h1 align="center">OTL 4.0, Example 692 (Customizing the date format in
OTL tracing via #define OTL_TRACE_DATE_FORMAT)</h1>
<p>This example demonstrates date format customization in <a
 href="otl3_compile.htm#OTL_TRACE">OTL tracing</a><a
 href="otl3_stream_class.htm#otl_datetime">.</a></p>
<h2>Source Code</h2>
<pre>#include &lt;iostream&gt;<br>using namespace std;<br><br>#include &lt;stdio.h&gt;<br><br>unsigned int my_trace_level=<br><span
 style="color: rgb(0, 0, 0);">   0x1 | // 1st level of tracing</span><br
 style="color: rgb(0, 0, 0);"><span style="color: rgb(0, 0, 0);">   0x2 | // 2nd level of tracing</span><br
 style="color: rgb(0, 0, 0);"><span style="color: rgb(0, 0, 0);">   0x4 | // 3rd level of tracing</span><br
 style="color: rgb(0, 0, 0);"><span style="color: rgb(0, 0, 0);">   0x8 | // 4th level of tracing<br>   0x10; // 5th level of tracing<br></span>// each level of tracing is represented by its own bit, <br>// so levels of tracing can be combined in an arbitrary order.<br><br>#define <a
 href="otl3_compile.htm#OTL_TRACE">OTL_TRACE_LEVEL</a> my_trace_level <br>   // enables OTL tracing, and uses my_trace_level as a trace control variable.<br><br>#define OTL_TRACE_STREAM cerr <br>   // directs all OTL tracing to cerr<br><br>#define OTL_TRACE_LINE_PREFIX "MY OTL TRACE ==&gt; " <br>   // redefines the default OTL trace line prefix. This #define is optional<br><br>// change the date format in OTL tracing to YYYY-MM-DD.<br><span
 style="font-family: monospace;">#define <a
 href="otl3_compile.htm#OTL_TRACE_FORMAT_DATETIME">OTL_TRACE_FORMAT_DATETIME</a>(s)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;      \</span><br
 style="font-family: monospace;">      <span
 style="font-family: monospace;"></span><span
 style="font-family: monospace;">s.year&lt;&lt;"-"&lt;&lt;s.month&lt;&lt;"-"&lt;&lt;s.day</span><small><big><span
 style="font-family: monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;      \</span><br
 style="font-family: monospace;">      </big><span
 style="font-family: monospace;"><big>&lt;&lt;" "&lt;&lt;s.hour&lt;&lt;":"&lt;&lt;s.minute&lt;&lt;":"&lt;&lt;s.second&lt;&lt;"."&lt;&lt;s.fraction <br></big></span></small><br>// the following #define is needed in case if<br>// timestamps with time zones are used.<br><span
 style="font-family: monospace;">#define <a
 href="otl3_compile.htm#OTL_TRACE_FORMAT_DATETIME">OTL_TRACE_FORMAT_TZ_DATETIME</a>(s)                            \</span><br
 style="font-family: monospace;">      <span
 style="font-family: monospace;">s.year&lt;&lt;"-"&lt;&lt;s.month&lt;&lt;"-"&lt;&lt;s.day&nbsp;                            \</span><br
 style="font-family: monospace;">      <span
 style="font-family: monospace;">&lt;&lt;" "&lt;&lt;s.hour&lt;&lt;":"&lt;&lt;s.minute&lt;&lt;":"&lt;&lt;s.second&lt;&lt;"."&lt;&lt;s.fraction \</span><br
 style="font-family: monospace;">      <span
 style="font-family: monospace;">&lt;&lt;" "&lt;&lt;s.tz_hour&lt;&lt;":"&lt;&lt;s.tz_minute</span><br
 style="font-family: monospace;"><br><span
 style="font-family: monospace;"></span><small><span
 style="font-family: monospace;"><br>      </span></small><br></pre>
<pre>#define OTL_ORA8 // Compile OTL 4.0/OCI8<br>#include &lt;otlv4.h&gt; // include the OTL 4.0 header file<br><br><a
 href="otl3_connect_class.htm">otl_connect</a> db; // connect object<br><br>void insert(void)<br>// insert rows into table<br>{ <br> otl_stream o(50, // buffer size<br>              "insert into test_tab2 values(:f1&lt;int&gt;,:f2&lt;timestamp&gt;)", <br>                 // SQL statement<br>              db // connect object<br>             );<br><br> otl_datetime tm;<br><br> for(int i=1;i&lt;=10;++i){<br>  tm.year=2009;<br>  tm.month=10;<br>  tm.day=19;<br>  tm.hour=23;<br>  tm.minute=12;<br>  tm.second=12;<br>  o&lt;&lt;i&lt;&lt;tm;<br> }<br>}<br><br>void select(void)<br>{ <br> otl_stream i(50, // buffer size<br>              "select * from test_tab2 where f2=:f2&lt;timestamp&gt;",<br>                 // SELECT statement<br>              db // connect object<br>             ); <br>   // create select stream<br> <br> int f1;<br> otl_datetime tm,f2;<br><br> tm.year=2009;<br> tm.month=10;<br> tm.day=19;<br> tm.hour=23;<br> tm.minute=12;<br> tm.second=12;<br><br> i&lt;&lt;tm; // assigning :1 = tm<br>   // SELECT automatically executes when all input variables are<br>   // assigned. First portion of out rows is fetched to the buffer<br><br> while(!i.eof()){ // while not end-of-data<br>  i&gt;&gt;f1&gt;&gt;f2;<br>  cout&lt;&lt;"f1="&lt;&lt;f1&lt;&lt;", f2="&lt;&lt;f2.year&lt;&lt;"-"&lt;&lt;f2.month&lt;&lt;"-"&lt;&lt;f2.day<br>      &lt;&lt;" "&lt;&lt;f2.hour&lt;&lt;":"&lt;&lt;f2.minute&lt;&lt;":"<br>      &lt;&lt;f2.second&lt;&lt;endl;<br> }<br> <br>}</pre>
<pre>int main()<br>{<br> <a href="otl3_connect_class.htm">otl_connect::otl_initialize</a>();<br><br> try{<br><br>  db.rlogon("scott/tiger"); // connect to the database<br><br>  <a
 href="otl3_const_sql.htm">otl_cursor::direct_exec<br></a>   (<br>    db,<br>    "drop table test_tab2",<br>    otl_exception::disabled // disable OTL exceptions<br>   ); // drop table<br><br>  <a
 href="otl3_const_sql.htm">otl_cursor::direct_exec<br></a>   (<br>    db,<br>    "create table test_tab2(f1 int, f2 date)"<br>    );  // create table<br><br>  insert(); // insert records into table<br>  select(); // select records from table<br><br> }<br><br> catch(<a
 href="otl3_exception_class.htm">otl_exception</a>&amp; p){ // intercept OTL exceptions<br>  cerr&lt;&lt;p.msg&lt;&lt;endl; // print out error message<br>  cerr&lt;&lt;p.stm_text&lt;&lt;endl; // print out SQL that caused the error<br>  cerr&lt;&lt;p.var_info&lt;&lt;endl; // print out the variable that caused the error<br> }<br><br> db.logoff(); // disconnect from the database<br><br> return 0;<br><br>}<br></pre>
<h2>Output</h2>
<pre>MY OTL TRACE ==&gt; otl_connect(this=004190F4)::rlogon(connect_str="scott/*****", auto_commit=0);<br>MY OTL TRACE ==&gt; otl_cursor::direct_exec(connect=004190F0,sqlstm="drop table test_tab2",exception_enabled=0);<br>MY OTL TRACE ==&gt; otl_cursor::direct_exec(connect=004190F0,sqlstm="create table test_tab2(f1 int, f2 date)",exception_enabled=1);<br>MY OTL TRACE ==&gt; otl_stream(this=0012FED0)::open(buffer_size=50, sqlstm=insert into test_tab2 values(:f1&lt;int&gt;,:f2&lt;timestamp&gt;), connect=004190F0);<br>MY OTL TRACE ==&gt; otl_stream(this=0012FED0)::operator &lt;&lt;(int: ftype=4, placeholder=:f1, value=1);<br>MY OTL TRACE ==&gt; otl_stream(this=0012FED0)::operator &lt;&lt;(otl_datetime&amp;: ftype=8, placeholder=:f2, value=2009-10-19 23:12:12.0);<br>MY OTL TRACE ==&gt; otl_stream(this=0012FED0)::operator &lt;&lt;(int: ftype=4, placeholder=:f1, value=2);<br>MY OTL TRACE ==&gt; otl_stream(this=0012FED0)::operator &lt;&lt;(otl_datetime&amp;: ftype=8, placeholder=:f2, value=2009-10-19 23:12:12.0);<br>MY OTL TRACE ==&gt; otl_stream(this=0012FED0)::operator &lt;&lt;(int: ftype=4, placeholder=:f1, value=3);<br>MY OTL TRACE ==&gt; otl_stream(this=0012FED0)::operator &lt;&lt;(otl_datetime&amp;: ftype=8, placeholder=:f2, value=2009-10-19 23:12:12.0);<br>MY OTL TRACE ==&gt; otl_stream(this=0012FED0)::operator &lt;&lt;(int: ftype=4, placeholder=:f1, value=4);<br>MY OTL TRACE ==&gt; otl_stream(this=0012FED0)::operator &lt;&lt;(otl_datetime&amp;: ftype=8, placeholder=:f2, value=2009-10-19 23:12:12.0);<br>MY OTL TRACE ==&gt; otl_stream(this=0012FED0)::operator &lt;&lt;(int: ftype=4, placeholder=:f1, value=5);<br>MY OTL TRACE ==&gt; otl_stream(this=0012FED0)::operator &lt;&lt;(otl_datetime&amp;: ftype=8, placeholder=:f2, value=2009-10-19 23:12:12.0);<br>MY OTL TRACE ==&gt; otl_stream(this=0012FED0)::operator &lt;&lt;(int: ftype=4, placeholder=:f1, value=6);<br>MY OTL TRACE ==&gt; otl_stream(this=0012FED0)::operator &lt;&lt;(otl_datetime&amp;: ftype=8, placeholder=:f2, value=2009-10-19 23:12:12.0);<br>MY OTL TRACE ==&gt; otl_stream(this=0012FED0)::operator &lt;&lt;(int: ftype=4, placeholder=:f1, value=7);<br>MY OTL TRACE ==&gt; otl_stream(this=0012FED0)::operator &lt;&lt;(otl_datetime&amp;: ftype=8, placeholder=:f2, value=2009-10-19 23:12:12.0);<br>MY OTL TRACE ==&gt; otl_stream(this=0012FED0)::operator &lt;&lt;(int: ftype=4, placeholder=:f1, value=8);<br>MY OTL TRACE ==&gt; otl_stream(this=0012FED0)::operator &lt;&lt;(otl_datetime&amp;: ftype=8, placeholder=:f2, value=2009-10-19 23:12:12.0);<br>MY OTL TRACE ==&gt; otl_stream(this=0012FED0)::operator &lt;&lt;(int: ftype=4, placeholder=:f1, value=9);<br>MY OTL TRACE ==&gt; otl_stream(this=0012FED0)::operator &lt;&lt;(otl_datetime&amp;: ftype=8, placeholder=:f2, value=2009-10-19 23:12:12.0);<br>MY OTL TRACE ==&gt; otl_stream(this=0012FED0)::operator &lt;&lt;(int: ftype=4, placeholder=:f1, value=10);<br>MY OTL TRACE ==&gt; otl_stream(this=0012FED0)::operator &lt;&lt;(otl_datetime&amp;: ftype=8, placeholder=:f2, value=2009-10-19 23:12:12.0);<br>MY OTL TRACE ==&gt; otl_stream(this=0012FED0)::close();<br>MY OTL TRACE ==&gt; otl_stream(this=0012FED0), executing SQL Stm=insert into test_tab2 values(:f1     ,:f2           ), current batch size=10, row offset=0<br>MY OTL TRACE ==&gt; otl_connect(this=004190F0)::commit();<br>MY OTL TRACE ==&gt; otl_stream(this=0012FED0)::open(buffer_size=50, sqlstm=select * from test_tab2 where f2=:f2&lt;timestamp&gt;, connect=004190F0);<br>MY OTL TRACE ==&gt; otl_stream(this=0012FED0)::operator &lt;&lt;(otl_datetime&amp;: ftype=8, placeholder=:f2, value=2009-10-19 23:12:12.0);<br>MY OTL TRACE ==&gt; otl_stream(this=0012FED0), executing SQL Stm=select * from test_tab2 where f2=:f2           , buffer size=50<br>MY OTL TRACE ==&gt; otl_stream(this=0012FED0), fetched the first batch of rows, SQL Stm=select * from test_tab2 where f2=:f2           , RPC=10<br>MY OTL TRACE ==&gt; otl_stream(this=0012FED0)::operator &gt;&gt;(int&amp; : ftype=2, placeholder=F1, value=1);<br>MY OTL TRACE ==&gt; otl_stream(this=0012FED0)::operator &gt;&gt;(otl_datetime&amp; : ftype=8, placeholder=F2, value=2009-10-19 23:12:12.0);<br>f1=1, f2=2009-10-19 23:12:12<br>MY OTL TRACE ==&gt; otl_stream(this=0012FED0)::operator &gt;&gt;(int&amp; : ftype=2, placeholder=F1, value=2);<br>MY OTL TRACE ==&gt; otl_stream(this=0012FED0)::operator &gt;&gt;(otl_datetime&amp; : ftype=8, placeholder=F2, value=2009-10-19 23:12:12.0);<br>f1=2, f2=2009-10-19 23:12:12<br>MY OTL TRACE ==&gt; otl_stream(this=0012FED0)::operator &gt;&gt;(int&amp; : ftype=2, placeholder=F1, value=3);<br>MY OTL TRACE ==&gt; otl_stream(this=0012FED0)::operator &gt;&gt;(otl_datetime&amp; : ftype=8, placeholder=F2, value=2009-10-19 23:12:12.0);<br>f1=3, f2=2009-10-19 23:12:12<br>MY OTL TRACE ==&gt; otl_stream(this=0012FED0)::operator &gt;&gt;(int&amp; : ftype=2, placeholder=F1, value=4);<br>MY OTL TRACE ==&gt; otl_stream(this=0012FED0)::operator &gt;&gt;(otl_datetime&amp; : ftype=8, placeholder=F2, value=2009-10-19 23:12:12.0);<br>f1=4, f2=2009-10-19 23:12:12<br>MY OTL TRACE ==&gt; otl_stream(this=0012FED0)::operator &gt;&gt;(int&amp; : ftype=2, placeholder=F1, value=5);<br>MY OTL TRACE ==&gt; otl_stream(this=0012FED0)::operator &gt;&gt;(otl_datetime&amp; : ftype=8, placeholder=F2, value=2009-10-19 23:12:12.0);<br>f1=5, f2=2009-10-19 23:12:12<br>MY OTL TRACE ==&gt; otl_stream(this=0012FED0)::operator &gt;&gt;(int&amp; : ftype=2, placeholder=F1, value=6);<br>MY OTL TRACE ==&gt; otl_stream(this=0012FED0)::operator &gt;&gt;(otl_datetime&amp; : ftype=8, placeholder=F2, value=2009-10-19 23:12:12.0);<br>f1=6, f2=2009-10-19 23:12:12<br>MY OTL TRACE ==&gt; otl_stream(this=0012FED0)::operator &gt;&gt;(int&amp; : ftype=2, placeholder=F1, value=7);<br>MY OTL TRACE ==&gt; otl_stream(this=0012FED0)::operator &gt;&gt;(otl_datetime&amp; : ftype=8, placeholder=F2, value=2009-10-19 23:12:12.0);<br>f1=7, f2=2009-10-19 23:12:12<br>MY OTL TRACE ==&gt; otl_stream(this=0012FED0)::operator &gt;&gt;(int&amp; : ftype=2, placeholder=F1, value=8);<br>MY OTL TRACE ==&gt; otl_stream(this=0012FED0)::operator &gt;&gt;(otl_datetime&amp; : ftype=8, placeholder=F2, value=2009-10-19 23:12:12.0);<br>f1=8, f2=2009-10-19 23:12:12<br>MY OTL TRACE ==&gt; otl_stream(this=0012FED0)::operator &gt;&gt;(int&amp; : ftype=2, placeholder=F1, value=9);<br>MY OTL TRACE ==&gt; otl_stream(this=0012FED0)::operator &gt;&gt;(otl_datetime&amp; : ftype=8, placeholder=F2, value=2009-10-19 23:12:12.0);<br>f1=9, f2=2009-10-19 23:12:12<br>MY OTL TRACE ==&gt; otl_stream(this=0012FED0)::operator &gt;&gt;(int&amp; : ftype=2, placeholder=F1, value=10);<br>MY OTL TRACE ==&gt; otl_stream(this=0012FED0)::operator &gt;&gt;(otl_datetime&amp; : ftype=8, placeholder=F2, value=2009-10-19 23:12:12.0);<br>f1=10, f2=2009-10-19 23:12:12<br>MY OTL TRACE ==&gt; otl_stream(this=0012FED0)::close();<br>MY OTL TRACE ==&gt; otl_connect(this=004190F0)::logoff();<br><br><hr
 width="100%"></pre>
<center>
<p><a href="otl3_examples.htm">Examples</a> <a href="otl3.htm">Contents</a>
<a href="home.htm">Go Home</a> </p>
</center>
<p>Copyright &copy; 1996-2025, Sergei Kuchin, email: <a
 href="mailto:skuchin@gmail.com">skuchin@gmail.com</a>,
<a href="mailto:skuchin@gmail.com">skuchin@gmail.com</a>
<script language="JavaScript"><!-- hide from oldgmailsers
 var modDate = new Date(document.lastModified)
 document.write("<i> Last Updated:</i> " + (modDate.getMonth()+1) + "/" + 
                modDate.getDate() + "/" + "0"+(modDate.getYear())%100+".");
 //-->
 </script>.</p>
<p><i>Permission to use, copy, modify and redistribute this document
for
any purpose is hereby granted without fee, provided that the above
copyright
notice appear in all copies. THE SOFTWARE IS PROVIDED "AS IS" AND THE
AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING
ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT
SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR
CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF
USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE. </i></p>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript">
var pageTracker = _gat._getTracker("UA-5456201-1");
pageTracker._trackPageview();
</script>
</body>
</html>
