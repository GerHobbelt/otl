<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<html>
<head>
  <title>OTL 4.0, Example 400 (Sybase SQL Server:
otl_stream::describe_select() and result sets)</title>
  <meta name="Author" content="Sergei Kuchin">
  <meta name="GENERATOR"
 content="Mozilla/3.03Gold (Win95; I) [Netscape]">
  <meta name="KeyWords"
 content="OTL, Oracle, ODBC, DB2, CLI, database API, C++, Template Library">
</head>
<body>
<h1 align="center">OTL 4.0, Example 400<br>
(Sybase SQL Server: otl_stream::describe_select() and result sets)</h1>
<p>This example demonstrates the <a
 href="otl3_stream_class.htm#describe_select">otl_stream::describe_select</a>()
with a stored procedure call returning a result set.</p>
<h2>Source Code</h2>
<pre>#include &lt;iostream&gt;<br>using namespace std;<br><br>#include &lt;stdio.h&gt;</pre>
<pre>#define OTL_ODBC_UNIX // Compile OTL 4.0/ODBC<br>#include &lt;otlv4.h&gt; // include the OTL 4.0 header file<br><br><a
 href="otl3_connect_class.htm">otl_connect</a> db; // connect object</pre>
<pre>void insert()<br>// insert rows into table<br>{ <br> <a
 href="otl3_stream_class.htm">otl_stream</a> o(50, // buffer size<br>              "insert into test_tab values(:f1&lt;float&gt;,:f2&lt;char[31]&gt;)", <br>                 // SQL statement<br>              db // connect object<br>             );<br> char tmp[32];<br><br> for(int i=1;i&lt;=100;++i){<br>  sprintf(tmp,"Name%d",i);<br>  o&lt;&lt;(float)i&lt;&lt;tmp;<br> }<br>}<br><br>void select()<br>{ <br> <a
 href="otl3_stream_class.htm">otl_stream</a> i(50, // buffer size<br>              "{call my_proc(:f1&lt;int&gt;)}", // SELECT statement via stored procedure<br>              db, // connect object<br>              <a
 href="otl3_stream_class.htm#implicit_select">otl_implicit_select</a> // implicit SELECT statement<br>             ); <br>   // create select stream<br> <br> <a
 href="otl3_stream_class.htm#otl_column_desc">otl_column_desc</a>* desc;<br> int desc_len;<br><br> i&lt;&lt;4; // Before the child SELECT statement can be described,<br>       // the stored procedure needs to be executed.<br>       // Forcing the execution of the stored procedure by entering its input <br>       // patameter.<br><br> desc=i.<a
 href="otl3_stream_class.htm#describe_select">describe_select</a>(desc_len);<br><br> for(int n=0;n&lt;desc_len;++n){<br>  cout&lt;&lt;"========== COLUMN #"&lt;&lt;n+1&lt;&lt;" ==========="&lt;&lt;endl;<br>  cout&lt;&lt;"name="&lt;&lt;desc[n].name&lt;&lt;endl;<br>  cout&lt;&lt;"dbtype="&lt;&lt;desc[n].dbtype&lt;&lt;endl;<br>  cout&lt;&lt;"<a
 href="otl3_stream_class.htm#otl_var_dbtype">otl_var_dbtype</a>="&lt;&lt;desc[n].otl_var_dbtype&lt;&lt;endl;<br>  cout&lt;&lt;"dbsize="&lt;&lt;desc[n].dbsize&lt;&lt;endl;<br>  cout&lt;&lt;"scale="&lt;&lt;desc[n].scale&lt;&lt;endl;<br>  cout&lt;&lt;"prec="&lt;&lt;desc[n].prec&lt;&lt;endl;<br>  cout&lt;&lt;"nullok="&lt;&lt;desc[n].nullok&lt;&lt;endl;<br> }<br> <br><br>}<br><br>int main()<br>{<br> <a
 href="otl3_connect_class.htm">otl_connect::otl_initialize</a>(); // initialize ODBC environment<br> try{<br><br>  db.rlogon("scott/tigger@sybsql"); // connect to ODBC<br><br>  <a
 href="otl3_const_sql.htm">otl_cursor::direct_exec<br></a>   (<br>    db,<br>    "drop table test_tab",<br>    otl_exception::disabled // disable OTL exceptions<br>   ); // drop table<br><br>  <a
 href="otl3_const_sql.htm">otl_cursor::direct_exec<br></a>   (<br>    db,<br>    "create table test_tab(f1 int, f2 varchar(30))"<br>    );  // create table<br>  otl_cursor::direct_exec(db,"drop procedure my_proc",0);<br>  otl_cursor::direct_exec<br>   (<br>    db,<br>    "CREATE PROCEDURE my_proc "<br>    "  @F1 int "<br>    "AS "<br>    "SELECT * FROM test_tab "<br>    "WHERE f1&gt;=@F1 AND f1&lt;=@F1*2 "<br>    );  // create stored procedure<br><br>  insert(); // insert record into table<br>  select(); // select records from table<br><br> }<br><br> catch(<a
 href="otl3_exception_class.htm">otl_exception</a>&amp; p){ // intercept OTL exceptions<br>  cerr&lt;&lt;p.msg&lt;&lt;endl; // print out error message<br>  cerr&lt;&lt;p.stm_text&lt;&lt;endl; // print out SQL that caused the error<br>  cerr&lt;&lt;p.sqlstate&lt;&lt;endl; // print out SQLSTATE message<br>  cerr&lt;&lt;p.var_info&lt;&lt;endl; // print out the variable that caused the error<br> }<br><br> db.logoff(); // disconnect from ODBC<br><br> return 0;<br><br>}<br></pre>
<h2>Output</h2>
<pre>========== COLUMN #1 ===========<br>name=f1<br>dbtype=4<br>otl_var_dbtype=4<br>dbsize=10<br>scale=0<br>prec=10<br>nullok=1<br>========== COLUMN #2 ===========<br>name=f2<br>dbtype=12<br>otl_var_dbtype=1<br>dbsize=60<br>scale=0<br>prec=60<br>nullok=1<br></pre>
<pre>
<hr width="100%"></pre>
<center>
<p><a href="otl3_examples.htm">Examples</a> <a href="otl3.htm">Contents</a>
<a href="home.htm">Go Home</a> </p>
</center>
<p>Copyright &copy; 1996-2023, Sergei Kuchin, email: <a
 href="mailto:skuchin@gmail.com">skuchin@gmail.com</a>,
<a href="mailto:skuchin@gmail.com">skuchin@gmail.com</a>
<script language="JavaScript">
<!-- hide from old browsers
 var modDate = new Date(document.lastModified)
 document.write("<i> Last Updated:</i> " + (modDate.getMonth()+1) + "/" + 
                modDate.getDate() + "/" + "0"+(modDate.getYear())%100+".");
 //-->
 </script>.</p>
<p><i>Permission to use, copy, modify and redistribute this document
for
any purpose is hereby granted without fee, provided that the above
copyright
notice appear in all copies. THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE. </i></p>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript">
var pageTracker = _gat._getTracker("UA-5456201-1");
pageTracker._trackPageview();
</script>
</body>
</html>
