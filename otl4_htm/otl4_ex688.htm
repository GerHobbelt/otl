<!DOCTYPE html PUBLIC "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
  <meta http-equiv="Content-Type"
 content="text/html; charset=iso-8859-1">
  <meta name="Author" content="Sergei Kuchin">
  <meta name="GENERATOR"
 content="Mozilla/4.75 [en] (Win98; U) [Netscape]">
  <meta name="KeyWords"
 content="OTL, Oracle, ODBC, DB2, CLI, database API, C++, Template Library">
  <title>OTL 4.0, Example 688 (MS SQL Server 2005/2008 BACKUP command)</title>
</head>
<body>
<center>
<h1>OTL 4.0, Example 688 (MS SQL Server 2005/2008 BACKUP command)</h1>
</center>
This example demonstrates how to use the MS SQL Server BACKUP command
with
OTL. BACKUP command returns right away (after SQLExecDirect() call),
so otl_connect::<a href="otl3_const_sql.htm">direct_exec</a>() can't be
used. Calls to SQLGetDiagRec() and SQLMoreResults() need to be made in
order to get the BACKUP command's output diagnostic records.<br>
<h2>Source Code</h2>
<pre>#include &lt;iostream&gt;<br>using namespace std;<br><br>#include &lt;stdio.h&gt;<br><br>// function that recognizes BACKUP and DBCC commands, and returns "true".<br>inline bool sql_statement_with_diag_rec_output(const char* stm_text)<br>{<br>  if(strncmp(stm_text,"BACKUP",6)==0)<br>    return true;<br>  else if(strncmp(stm_text,"DBCC",4)==0)<br>    return true;<br>  else<br>    return false;<br>}<br><br></pre>
<pre>// #define <a href="otl3_compile.htm#OTL_ODBC_MSSQL_2005">OTL_ODBC_MSSQL_2005</a> // Compile OTL 4/ODBC, MS SQL 2005<br>#define <a
 href="otl3_compile.htm#OTL_ODBC_MSSQL_2008">OTL_ODBC_MSSQL_2008</a> // Compile OTL 4/ODBC, MS SQL 2008<br>#define <a
 href="otl3_compile.htm#OTL_ODBC_SQL_STATEMENT_WITH_DIAG_REC_OUTPUT"><span
 style="text-decoration: underline;">OTL_ODBC_SQL_STATEMENT_WITH_DIAG_REC_OUTPUT</span></a> sql_statement_with_diag_rec_output<br><br>#include &lt;otlv4.h&gt; // include the OTL 4.0 header file<br><br><a
 href="otl3_connect_class.htm">otl_connect</a> db; // connect object<br></pre>
<pre>int main()<br>{<br>&nbsp;<a href="otl3_connect_class.htm">otl_connect::otl_initialize</a>(); // initialize the environment<br>&nbsp;try{<br><br>&nbsp; db.rlogon("scott/tiger@mssql2008",1); <br>   // connect to the database in the "auto-commit" mode<br>   // in order to avoid generating transactions.<br><br>  <a
 href="otl3_stream_class.htm#nocommit">otl_nocommit_stream</a> stm; <br>   // the OTL "nocommit" stream doesn't generate any COMMITs,<br>   // which is needed for the BACKUP command.<br><br>  short int rec_ndx=1; // diagnostic record index<br>  SQLCHAR sql_state[1000]; // "SQL state" buffer<br>  SQLCHAR msg[SQL_MAX_MESSAGE_LENGTH+1]; // diagnostic record / message buffer<br>  int native_error; // native error code<br>  SQLRETURN ret; // return value (for SQLMoreResults() calls)<br><br>  const char* cmd = "BACKUP DATABASE master TO DISK='d:\\master.bak'";<br><br>  stm.<a
 href="otl3_stream_class.htm#otl_stream_open2">open</a>(1,cmd,db);<br>    // the stream recognizes the command as an "SQL statement <br>    // with diagnostic record output" with the help of <br>    // the sql_statement_with_diag_rec_output() function.<br>    // the stream executes the statement right away with an<br>    // SQLExecDirect() function call, which, in the case<br>    // of a BACKUP statement returns right away.<br><br>  bool done;<br>  // get all diagnostic records from the BACKUP command<br>  do{<br>    done=<a
 href="otl3_stream_class.htm#get_next_diag_rec">stm.get_next_diag_rec</a><br>           (rec_ndx,<br>            sql_state,<br>            msg,<br>            sizeof(msg),<br>            native_error);<br>    cout&lt;&lt;msg&lt;&lt;endl;<br>    // BACKUP command generates multiple results,<br>    // so we need to check if there are more results<br>    ret=SQLMoreResults(stm.<a
 href="otl3_stream_class.htm#get_stm_handle">get_stm_handle</a>());<br>    if(ret==SQL_SUCCESS_WITH_INFO){<br>       done=false;<br>       rec_ndx=1; // in order to start a new diagnostic record<br>                  // sequence, the record index needs to be set<br>                  // to 1.<br>    }<br>  }while(!done);<br>  stm.close();<br><br>&nbsp;}<br><br>&nbsp;catch(<a
 href="otl3_exception_class.htm">otl_exception</a>&amp; p){ // intercept OTL exceptions<br>&nbsp; cerr&lt;&lt;p.msg&lt;&lt;endl; // print out error message<br>&nbsp; cerr&lt;&lt;p.sqlstate&lt;&lt;endl; // print out SQLSTATE&nbsp;<br>&nbsp; cerr&lt;&lt;p.stm_text&lt;&lt;endl; // print out SQL that caused the error<br>&nbsp; cerr&lt;&lt;p.var_info&lt;&lt;endl; // print out the variable that caused the error<br>&nbsp;}<br><br>&nbsp;db.logoff(); // disconnect from the database<br><br>&nbsp;return 0;<br><br>}</pre>
<h2>
Output</h2>
<pre>[Microsoft][SQL Server Native Client 10.0][SQL Server]Processed 376 pages for database 'master', file 'master' on file 2.<br>[Microsoft][SQL Server Native Client 10.0][SQL Server]Processed 3 pages for database 'master', file 'mastlog' on file 2.<br>[Microsoft][SQL Server Native Client 10.0][SQL Server]BACKUP DATABASE successfully processed 379 pages in 0.380 seconds (7.781 MB/sec).<br><br><hr
 width="100%"></pre>
<center><a href="otl3_examples.htm">Examples</a> <a href="otl3.htm">Contents</a><a
 href="home.htm">Go
Home</a></center>
<p>Copyright &cop9; 1996-2018, Sergei Kuchin, email: <a
 href="mailto:skuchin@gmail.com">skuchin@gmail.com</a>,
<a href="mailto:skuchin@gmail.com">skuchin@gmail.com
<script language="JavaScript"><!-- hide from old browsers
 var modDate = new Date(document.lastModified)
 document.write("<i> Last Updated:</i> " + (modDate.getMonth()+1) + "/" + 
                modDate.getDate() + "/" + "0"+(modDate.getYear())%100+".");
 //-->
 </script></a>.
</p>
<p><i>Permission to use, copy, modify and redistribute this document
for
any purpose is hereby granted without fee, provided that the above
copyright
notice appear in all copies. THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.</i>
</p>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript">
var pageTracker = _gat._getTracker("UA-5456201-1");
pageTracker._trackPageview();
</script>
</body>
</html>
