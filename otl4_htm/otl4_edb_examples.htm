<!DOCTYPE doctype PUBLIC "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
  <meta content="text/html; charset=iso-8859-1"
 http-equiv="Content-Type">
  <meta content="Sergei Kuchin" name="Author">
  <meta content="Mozilla/4.77 [en] (Win95; U) [Netscape]"
 name="GENERATOR">
  <meta
 content="OTL, Oracle, ODBC, DB2, CLI, database API, C++, Template Library"
 name="KeyWords">
  <title>OTL 4.0, Examples for EnterpriseDB / ODBC</title>
</head>
<body>
<center>
<h1>OTL 4.0, Examples for Enterprise DB / ODBC.<br>
</h1>
<div style="text-align: left;">The examples below work with <a
 href="http://www.enterprisedb.com">EnterpriseDB</a>. In general, all
of these examples should work with any Enterprise DB 8.2 and higher<span
 style="font-style: italic;"></span> on Windows or Unix.<br>
</div>
<br>
</center>
<ul>
</ul>
<ol>
  <li> <b><a href="otl4_ex586.htm">Example 586 (Simple Insert/Select)</a></b></li>
  <li> <b><a href="otl4_ex587.htm">Example 587 ("Incompatible
datatypes
in stream operation" exception)</a></b></li>
  <li> <b><a href="otl4_ex588.htm">Example 588 (Simple Insert/Select
with the LONG datatype)</a></b></li>
  <li> <b><a href="otl4_ex589.htm">Example 589 (Simple Insert/Select
with the LONG RAW datatype)</a></b></li>
  <li> <b><a href="otl4_ex590.htm">Example 590
(otl_stream::describe_select() with a simple Select)</a></b></li>
  <li> <b><a href="otl4_ex591.htm">Example 591 (otl_stream and NULLs)</a></b></li>
  <li><b><a href="otl4_ex592.htm">Example 592 (otl_nocommit_stream)</a></b></li>
  <li><b><a href="otl4_ex593.htm">Examle 593 (otl_datetime)</a></b></li>
  <li><b><a href="otl4_ex594.htm">Example 594 (Get Rows Processed
Count)</a></b></li>
  <li><b><a href="otl4_ex595.htm">Example 595 ("Auto-commit every
SQL statement / commit-on-success" mode)</a></b></li>
  <li><b><a href="otl4_ex596.htm">Example
596 (Datatype override
in SELECT)</a></b></li>
  <li><b><a href="otl4_ex597.htm">Example 597 (STL std::strings,
ANSI C++ typecasts)</a></b></li>
  <li><b><a href="otl4_ex598.htm">Example 598 (STL-compliant OTL
stream iterators)</a></b></li>
  <li><b><a href="otl4_ex599.htm">Example 599 (otl_value&lt;T&gt;)</a></b></li>
  <li><b><a href="otl4_ex600.htm">Example 600 (#define
OTL_UNCAUGHT_EXCEPTION_ON)</a></b></li>
  <li><b><a href="otl4_ex601.htm">Example 601 (Group data type
override in SELECT)</a></b></li>
  <li><b><a href="otl4_ex602.htm">Example 602 (OTL stream
pooling)</a></b></li>
  <li><b><a href="otl4_ex603.htm">Example 603
(otl_stream::set_flush())</a></b></li>
  <li><b><a href="otl4_ex604.htm">Example 604 (<font size="-1">OTL_VALUE_TEMPLATE_ON,
OTL_USER_DEFINED_STRING_CLASS_ON</font>)</a></b></li>
  <li><b><a href="otl4_ex605.htm">Example 605 (Describe
otl_stream's bind variables)</a></b></li>
  <li> <b><a href="otl4_ex606.htm">Example 606 (otl_stream::clean(),
cancelling SELECT's fetch sequence)</a></b></li>
  <li><b><a href="otl4_ex607.htm">Example 607
(otl_stream::clean(), cleaning the SELECT stream's error flags)</a></b></li>
  <li><b><a href="otl4_ex608.htm">Example 608 (#define's
OTL_DEFAULT_XXX_NULL_TO_VAL)</a></b></li>
  <li><b><a href="otl4_ex609.htm">Example 609 (otl_exception, derived
from a base
class)</a></b></li>
  <li><b><a href="otl4_ex610.htm">Example 610
(OTL_ADD_NULL_TERMINATOR_STRING_SIZE)</a></b></li>
  <li><b><a href="otl4_ex611.htm">Example 611 (std::string and LONGs)</a></b></li>
  <li><b><a href="otl4_ex612.htm">Example 612 (SQL statement label)</a></b></li>
  <li><b><a href="otl4_ex613.htm">Example 613 (user defined string
class and LONGs)</a></b></li>
  <li><b><a href="otl4_ex614.htm">Example 614 (OTL tracing)</a></b></li>
  <li><b><a href="otl4_ex615.htm">Example 615 (Explict bind variables
in SELECT statement column definitions)</a></b></li>
  <li><b><a href="otl4_ex616.htm">Example 616 (64-bit signed integers)</a></b></li>
  <li><b><a href="otl4_ex617.htm">Example 617 (OTL stream read
iterator, simple SELECT)</a></b></li>
  <li><b><a href="otl4_ex618.htm">Example 618 (Strict numeric type
checking on SELECTs)</a></b></li>
  <li><b><a href="otl4_ex619.htm">Example 619 (Simple Insert/Select,
otl_connect::operator&lt;&lt;, &lt;&lt;=, &gt;&gt;)</a></b></li>
  <li><b><a href="otl4_ex620.htm">Example 620 (Simple Insert/Select
with RAW datatype)</a></b></li>
  <li><b><a href="otl4_ex621.htm">Example 621 (Simple Insert/Select
with RAW datatype and otl_stream_read_iterator)</a></b></li>
  <li> <b><a href="otl4_ex622.htm">Example 622 (Simple Insert/Select
with the CLOB datatype)</a></b></li>
  <li> <b><a href="otl4_ex623.htm">Example 623 (Simple Insert/Select
with the BLOB datatype)</a></b></li>
  <li><b><a href="otl4_ex624.htm">Example 624 (std::string and CLOBs)</a></b></li>
  <li><b><a href="otl4_ex675.htm">Example 675 (Simple
Insert/Select/Update #define OTL_ODBC_MULTI_MODE)</a></b></li>
</ol>
<ul>
</ul>
<center>
<hr width="100%">
<p><a href="otl3_const_sql.htm">Prev</a> <a href="otl3_compile.htm">Next</a><a
 href="otl3.htm">Contents</a><a href="home.htm">Go Home</a></p>
</center>
<p>Copyright &copy; 1996-2025, Sergei Kuchin, email: <a
 href="mailto:skuchin@gmail.com">skuchin@gmail.com</a>, <a
 href="mailto:skuchin@gmail.com">skuchin@gmail.com
<script language="JavaScript"><!-- hide from old browsers
 var modDate = new Date(document.lastModified)
 document.write("<i> Last Updated:</i> " + (modDate.getMonth()+1) + "/" + 
                modDate.getDate() + "/" + "0"+(modDate.getYear())%100+".");
 //-->
 </script></a>.</p>
<p><i>Permission to use, copy, modify and redistribute this document
for any purpose is hereby granted without fee, provided that the above
copyright notice appear in all copies. THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.</i> </p>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript">
var pageTracker = _gat._getTracker("UA-5456201-1");
pageTracker._trackPageview();
</script>
</body>
</html>
