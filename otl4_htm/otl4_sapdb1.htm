<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
   <meta name="Author" content="Sergei Kuchin">
   <meta name="GENERATOR" content="Mozilla/4.77 [en] (Win95; U) [Netscape]">
   <meta name="KeyWords" content="OTL, Oracle, ODBC, DB2, CLI, database API, C++, Template Library">
   <title>SAP DB, Example 1 (stored procedure call)</title>
</head>
<body>

<center>
<h1>
OTL 4.0, SAP DB, Example 1 (stored procedure call)</h1></center>

<h1>
SAP DB Example 1 (stored procedure call)</h1>
This example demonstrates a SAP DB stored procedure call
<h2>
Source Code</h2>

<pre>#include &lt;iostream.h>
#include &lt;stdio.h>
#define OTL_ODBC // Compile OTL 4.0/ODBC
#include &lt;otlv4.h>

<a href="otl3_connect_class.htm">otl_connect</a> db; // connect object

void stored_proc(void)
// invoking stored procedure
{&nbsp;
&nbsp;<a href="otl3_stream_class.htm">otl_stream</a> o(1, // buffer size should be equal to 1 in case of stored procedure call
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "{call my_proc("
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; " :A&lt;int,inout>, "
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; " :B&lt;char[31],out>, "
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; " :C&lt;char[31],in> "
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ")}",
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // stored procedure call
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; db // connect object
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; );

&nbsp;o.<a href="otl3_stream_class.htm#set_commit">set_commit</a>(0); // set stream auto-commit off since
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // the stream does not generate transaction

&nbsp;o&lt;&lt;1&lt;&lt;"Test String1"; // assigning :1 = 1, :3 = "Test String1"

&nbsp;int a;
&nbsp;char b[31];

&nbsp;o>>a>>b;
&nbsp;cout&lt;&lt;"A="&lt;&lt;a&lt;&lt;", B="&lt;&lt;b&lt;&lt;endl;

}

int main()
{
&nbsp;otl_connect::otl_initialize(); // initialize ODBC environment
&nbsp;try{
&nbsp; db.rlogon("uid=scott;pwd=tiger;dsn=sapdb"); // connect to ODBC
&nbsp; otl_cursor::direct_exec
&nbsp;&nbsp; (db,
&nbsp;&nbsp;&nbsp; "CREATE DBPROC my_proc ("
&nbsp;&nbsp;&nbsp; "&nbsp; INOUT A INTEGER,&nbsp;&nbsp;&nbsp;&nbsp; "
&nbsp;&nbsp;&nbsp; "&nbsp; OUT&nbsp;&nbsp; B VARCHAR(60), "
&nbsp;&nbsp;&nbsp; "&nbsp; IN&nbsp;&nbsp;&nbsp; C VARCHAR(60)&nbsp; "
&nbsp;&nbsp;&nbsp; ") AS "
&nbsp;&nbsp;&nbsp; "BEGIN "
&nbsp;&nbsp;&nbsp; "&nbsp; SET A = A + 1;"
&nbsp;&nbsp;&nbsp; "&nbsp; SET B = C;"
&nbsp;&nbsp;&nbsp; "END;"
&nbsp;&nbsp; );&nbsp; // create stored procedure

&nbsp; stored_proc(); // invoking stored procedure
&nbsp;}
&nbsp;catch(otl_exception&amp; p){ // intercept OTL exceptions
&nbsp; cerr&lt;&lt;p.msg&lt;&lt;endl; // print out error message
&nbsp; cerr&lt;&lt;p.code&lt;&lt;endl; // print out error code
&nbsp; cerr&lt;&lt;p.var_info&lt;&lt;endl; // print out the variable that caused the error
&nbsp; cerr&lt;&lt;p.sqlstate&lt;&lt;endl; // print out SQLSTATE message
&nbsp; cerr&lt;&lt;p.stm_text&lt;&lt;endl; // print out SQL that caused the error
&nbsp;}
&nbsp;db.logoff(); // disconnect from the data source
&nbsp;return 0;
}</pre>

<h2>
Output</h2>

<pre>&nbsp;A=2, B=Test String1

<hr WIDTH="100%"></pre>

<center><a href="otl3_examples.htm">Examples</a> <a href="otl3.htm">Contents</a><a href="home.htm">Go
Home</a></center>

<p>Copyright &copy; 1996-2022, Sergei Kuchin, email: <a href="mailto:skuchin@gmail.com">skuchin@gmail.com</a>,
<a href="mailto:skuchin@gmail.com">skuchin@gmail.com<script Language="Javgmailpt">
<!-- hide from old browsers
 var modDate = new Date(document.lastModified)
 document.write("<i> Last Updated:</i> " + (modDate.getMonth()+1) + "/" + 
                modDate.getDate() + "/" + "0"+(modDate.getYear())%100+".");
 //-->
 </script>
</a>.
<p><i>Permission to use, copy, modify and redistribute this document for
any purpose is hereby granted without fee, provided that the above copyright
notice appear in all copies. THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.</i>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript">
var pageTracker = _gat._getTracker("UA-5456201-1");
pageTracker._trackPageview();
</script>
</body>
</html>
